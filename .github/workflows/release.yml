name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Create ZIP archive
        run: |
          zip -r codeface-${{ github.ref_name }}.zip dist/

      - name: Generate release notes
        id: generate_notes
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            echo "release_notes=Initial release" >> $GITHUB_OUTPUT
          else
            git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD > release_notes.md
            echo "release_notes<<EOF" >> $GITHUB_OUTPUT
            cat release_notes.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: codeface-${{ github.ref_name }}.zip
          body: |
            # CodeFace Release ${{ github.ref_name }}
            
            ## Changes in this version:
            ${{ steps.generate_notes.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

